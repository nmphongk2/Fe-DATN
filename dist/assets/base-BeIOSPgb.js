import{j as d,ai as S,r as u}from"./index-B8WTsAS6.js";const k={allList:[{href:"/",label:"Trang chủ"},{href:"/allList",label:"Trang sản phẩm"}],productlist:[{href:"/",label:"Trang chủ"},{href:"/productlist",label:"Laptop"}]},$=({href:r,children:e})=>d.jsx(S.Item,{href:r,children:e}),z=({items:r})=>{const[e,t]=u.useState(!0),[n,a]=u.useState(0);return u.useEffect(()=>{const f=()=>{const c=window.pageYOffset||document.documentElement.scrollTop;c>n?t(!1):t(!0),a(c<=0?0:c)};return window.addEventListener("scroll",f),()=>window.removeEventListener("scroll",f)},[n]),d.jsx("section",{className:"w-full bg-gray-50 dark:bg-gray-900 p-0 sm:p-3 -mt-1.5  antialiased",children:d.jsx("div",{className:`sticky top-0 z-60 transition-transform duration-300 ${e?"":"-translate-y-full"}`,children:d.jsx(S,{"aria-label":"Solid background breadcrumb example",className:"bg-white px-6 py-1 dark:bg-gray-800",children:r.map((f,c)=>d.jsx($,{href:f.href,children:f.label},c))})})})},x="%[a-f0-9]{2}",b=new RegExp("("+x+")|([^%]+?)","gi"),F=new RegExp("("+x+")+","gi");function m(r,e){try{return[decodeURIComponent(r.join(""))]}catch{}if(r.length===1)return r;e=e||1;const t=r.slice(0,e),n=r.slice(e);return Array.prototype.concat.call([],m(t),m(n))}function R(r){try{return decodeURIComponent(r)}catch{let e=r.match(b)||[];for(let t=1;t<e.length;t++)r=m(e,t).join(""),e=r.match(b)||[];return r}}function U(r){const e={"%FE%FF":"��","%FF%FE":"��"};let t=F.exec(r);for(;t;){try{e[t[0]]=decodeURIComponent(t[0])}catch{const a=R(t[0]);a!==t[0]&&(e[t[0]]=a)}t=F.exec(r)}e["%C2"]="�";const n=Object.keys(e);for(const a of n)r=r.replace(new RegExp(a,"g"),e[a]);return r}function T(r){if(typeof r!="string")throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof r+"`");try{return decodeURIComponent(r)}catch{return U(r)}}function L(r,e){const t={};if(Array.isArray(e))for(const n of e){const a=Object.getOwnPropertyDescriptor(r,n);a!=null&&a.enumerable&&Object.defineProperty(t,n,a)}else for(const n of Reflect.ownKeys(r)){const a=Object.getOwnPropertyDescriptor(r,n);if(a.enumerable){const f=r[n];e(n,f,r)&&Object.defineProperty(t,n,a)}}return t}function j(r,e){if(!(typeof r=="string"&&typeof e=="string"))throw new TypeError("Expected the arguments to be of type `string`");if(r===""||e==="")return[];const t=r.indexOf(e);return t===-1?[]:[r.slice(0,t),r.slice(t+e.length)]}const D=r=>r==null,q=r=>encodeURIComponent(r).replaceAll(/[!'()*]/g,e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`),y=Symbol("encodeFragmentIdentifier");function B(r){switch(r.arrayFormat){case"index":return e=>(t,n)=>{const a=t.length;return n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,[i(e,r),"[",a,"]"].join("")]:[...t,[i(e,r),"[",i(a,r),"]=",i(n,r)].join("")]};case"bracket":return e=>(t,n)=>n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,[i(e,r),"[]"].join("")]:[...t,[i(e,r),"[]=",i(n,r)].join("")];case"colon-list-separator":return e=>(t,n)=>n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,[i(e,r),":list="].join("")]:[...t,[i(e,r),":list=",i(n,r)].join("")];case"comma":case"separator":case"bracket-separator":{const e=r.arrayFormat==="bracket-separator"?"[]=":"=";return t=>(n,a)=>a===void 0||r.skipNull&&a===null||r.skipEmptyString&&a===""?n:(a=a===null?"":a,n.length===0?[[i(t,r),e,i(a,r)].join("")]:[[n,i(a,r)].join(r.arrayFormatSeparator)])}default:return e=>(t,n)=>n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,i(e,r)]:[...t,[i(e,r),"=",i(n,r)].join("")]}}function P(r){let e;switch(r.arrayFormat){case"index":return(t,n,a)=>{if(e=/\[(\d*)]$/.exec(t),t=t.replace(/\[\d*]$/,""),!e){a[t]=n;return}a[t]===void 0&&(a[t]={}),a[t][e[1]]=n};case"bracket":return(t,n,a)=>{if(e=/(\[])$/.exec(t),t=t.replace(/\[]$/,""),!e){a[t]=n;return}if(a[t]===void 0){a[t]=[n];return}a[t]=[...a[t],n]};case"colon-list-separator":return(t,n,a)=>{if(e=/(:list)$/.exec(t),t=t.replace(/:list$/,""),!e){a[t]=n;return}if(a[t]===void 0){a[t]=[n];return}a[t]=[...a[t],n]};case"comma":case"separator":return(t,n,a)=>{const f=typeof n=="string"&&n.includes(r.arrayFormatSeparator),c=typeof n=="string"&&!f&&l(n,r).includes(r.arrayFormatSeparator);n=c?l(n,r):n;const s=f||c?n.split(r.arrayFormatSeparator).map(o=>l(o,r)):n===null?n:l(n,r);a[t]=s};case"bracket-separator":return(t,n,a)=>{const f=/(\[])$/.test(t);if(t=t.replace(/\[]$/,""),!f){a[t]=n&&l(n,r);return}const c=n===null?[]:n.split(r.arrayFormatSeparator).map(s=>l(s,r));if(a[t]===void 0){a[t]=c;return}a[t]=[...a[t],...c]};default:return(t,n,a)=>{if(a[t]===void 0){a[t]=n;return}a[t]=[...[a[t]].flat(),n]}}}function w(r){if(typeof r!="string"||r.length!==1)throw new TypeError("arrayFormatSeparator must be single character string")}function i(r,e){return e.encode?e.strict?q(r):encodeURIComponent(r):r}function l(r,e){return e.decode?T(r):r}function O(r){return Array.isArray(r)?r.sort():typeof r=="object"?O(Object.keys(r)).sort((e,t)=>Number(e)-Number(t)).map(e=>r[e]):r}function E(r){const e=r.indexOf("#");return e!==-1&&(r=r.slice(0,e)),r}function V(r){let e="";const t=r.indexOf("#");return t!==-1&&(e=r.slice(t)),e}function p(r,e,t){return t==="string"&&typeof r=="string"?r:typeof t=="function"&&typeof r=="string"?t(r):e.parseBooleans&&r!==null&&(r.toLowerCase()==="true"||r.toLowerCase()==="false")?r.toLowerCase()==="true":t==="number"&&!Number.isNaN(Number(r))&&typeof r=="string"&&r.trim()!==""||e.parseNumbers&&!Number.isNaN(Number(r))&&typeof r=="string"&&r.trim()!==""?Number(r):r}function g(r){r=E(r);const e=r.indexOf("?");return e===-1?"":r.slice(e+1)}function h(r,e){e={decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1,types:Object.create(null),...e},w(e.arrayFormatSeparator);const t=P(e),n=Object.create(null);if(typeof r!="string"||(r=r.trim().replace(/^[?#&]/,""),!r))return n;for(const a of r.split("&")){if(a==="")continue;const f=e.decode?a.replaceAll("+"," "):a;let[c,s]=j(f,"=");c===void 0&&(c=f),s=s===void 0?null:["comma","separator","bracket-separator"].includes(e.arrayFormat)?s:l(s,e),t(l(c,e),s,n)}for(const[a,f]of Object.entries(n))if(typeof f=="object"&&f!==null&&e.types[a]!=="string")for(const[c,s]of Object.entries(f)){const o=e.types[a]?e.types[a].replace("[]",""):void 0;f[c]=p(s,e,o)}else typeof f=="object"&&f!==null&&e.types[a]==="string"?n[a]=Object.values(f).join(e.arrayFormatSeparator):n[a]=p(f,e,e.types[a]);return e.sort===!1?n:(e.sort===!0?Object.keys(n).sort():Object.keys(n).sort(e.sort)).reduce((a,f)=>{const c=n[f];return a[f]=c&&typeof c=="object"&&!Array.isArray(c)?O(c):c,a},Object.create(null))}function N(r,e){if(!r)return"";e={encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:",",...e},w(e.arrayFormatSeparator);const t=c=>e.skipNull&&D(r[c])||e.skipEmptyString&&r[c]==="",n=B(e),a={};for(const[c,s]of Object.entries(r))t(c)||(a[c]=s);const f=Object.keys(a);return e.sort!==!1&&f.sort(e.sort),f.map(c=>{const s=r[c];return s===void 0?"":s===null?i(c,e):Array.isArray(s)?s.length===0&&e.arrayFormat==="bracket-separator"?i(c,e)+"[]":s.reduce(n(c),[]).join("&"):i(c,e)+"="+i(s,e)}).filter(c=>c.length>0).join("&")}function A(r,e){var a;e={decode:!0,...e};let[t,n]=j(r,"#");return t===void 0&&(t=r),{url:((a=t==null?void 0:t.split("?"))==null?void 0:a[0])??"",query:h(g(r),e),...e&&e.parseFragmentIdentifier&&n?{fragmentIdentifier:l(n,e)}:{}}}function C(r,e){e={encode:!0,strict:!0,[y]:!0,...e};const t=E(r.url).split("?")[0]||"",n=g(r.url),a={...h(n,{sort:!1}),...r.query};let f=N(a,e);f&&(f=`?${f}`);let c=V(r.url);if(typeof r.fragmentIdentifier=="string"){const s=new URL(t);s.hash=r.fragmentIdentifier,c=e[y]?s.hash:`#${r.fragmentIdentifier}`}return`${t}${f}${c}`}function I(r,e,t){t={parseFragmentIdentifier:!0,[y]:!1,...t};const{url:n,query:a,fragmentIdentifier:f}=A(r,t);return C({url:n,query:L(a,e),fragmentIdentifier:f},t)}function M(r,e,t){const n=Array.isArray(e)?a=>!e.includes(a):(a,f)=>!e(a,f);return I(r,n,t)}const H=Object.freeze(Object.defineProperty({__proto__:null,exclude:M,extract:g,parse:h,parseUrl:A,pick:I,stringify:N,stringifyUrl:C},Symbol.toStringTag,{value:"Module"}));export{z as R,k as b,H as q};
