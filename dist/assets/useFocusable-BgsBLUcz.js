import{a as l,c as b}from"./focusSafely-7dc_zii7.js";import{$ as c}from"./filterDOMProps-B3AneKiX.js";import{r as a,R as $}from"./index-B8WTsAS6.js";import{$ as p}from"./useFocus-CiKVCmpT.js";var v={},s={};function _(e,t,...o){var r;const n=`[Next UI]${t?` [${t}]`:" "}: ${e}`;if(!(typeof console>"u")&&!s[n]&&(s[n]=!0,((r=process==null?void 0:v)==null?void 0:r.NODE_ENV)!=="production"))return console.warn(n,o)}function i(e){if(!e)return;let t=!0;return o=>{let r={...o,preventDefault(){o.preventDefault()},isDefaultPrevented(){return o.isDefaultPrevented()},stopPropagation(){console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.")},continuePropagation(){t=!1}};e(r),t&&o.stopPropagation()}}function x(e){return{keyboardProps:e.isDisabled?{}:{onKeyDown:i(e.onKeyDown),onKeyUp:i(e.onKeyUp)}}}let P=$.createContext(null);function g(e){let t=a.useContext(P)||{};b(t,e);let{ref:o,...r}=t;return r}function h(e,t){let{focusProps:o}=p(e),{keyboardProps:r}=x(e),f=c(o,r),n=g(t),d=e.isDisabled?{}:n,u=a.useRef(e.autoFocus);return a.useEffect(()=>{u.current&&t.current&&l(t.current),u.current=!1},[t]),{focusableProps:c({...f,tabIndex:e.excludeFromTabOrder&&!e.isDisabled?-1:void 0},d)}}export{h as $,_ as w};
